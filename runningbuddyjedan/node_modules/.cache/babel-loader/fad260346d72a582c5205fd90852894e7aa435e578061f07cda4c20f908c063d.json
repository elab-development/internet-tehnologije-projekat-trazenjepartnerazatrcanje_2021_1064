{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP_Elitebook\\\\internet-tehnologije-projekat-trazenjepartnerazatrcanje_2021_1064\\\\runningbuddyjedan\\\\src\\\\components\\\\PlanForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useItineraryContext } from '../hooks/ItineraryHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanForm = () => {\n  _s();\n  // const placeOptions = ['Vracar', 'Palilula', 'Zvezdara', 'Rakovica', 'Novi Beograd', 'Savski venac'];\n\n  const [place, setPlace] = useState('');\n  const [time, setTime] = useState('');\n  const [length, setLength] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const {\n    dispatch\n  } = useItineraryContext();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const lengthFloat = parseFloat(length);\n\n    // provera da li je forma dobro popunjena\n    if (!place || !time || isNaN(lengthFloat) || lengthFloat <= 0) {\n      setError('Please fill in all fields correctly.');\n      setEmptyFields(['place', 'time', 'length']);\n      return;\n    }\n    const run = {\n      time,\n      place,\n      length: lengthFloat\n    };\n    const token = sessionStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await fetch('http://localhost:4000/api/plan', {\n          method: 'POST',\n          body: JSON.stringify(run),\n          headers: {\n            'Content-Type': 'application/json',\n            authorization: token\n          }\n        });\n        const json = await response.json();\n        const plan = json.plan;\n        console.log('ovo je plan kreiran', plan);\n        if (!response.ok) {\n          setError(json.error);\n          setEmptyFields(json.emptyFields);\n        } else {\n          setEmptyFields([]);\n          setError(null);\n          console.log('New plan added:', json);\n          setTime('');\n          setPlace('');\n          setLength('');\n          dispatch({\n            type: 'ADD_PLAN_TO_ITINERARY',\n            payload: plan\n          });\n        }\n      } catch (error) {\n        console.error('Failed to create plan:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create-form p-4 bg-white shadow-md rounded-lg\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Place:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setPlace(e.target.value),\n        value: place,\n        className: `block w-full mt-1 p-2 border rounded ${emptyFields.includes('place') ? 'border-red-500' : 'border-gray-300'}`,\n        placeholder: \"Enter a place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Date and Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        onChange: e => setTime(e.target.value),\n        value: time,\n        className: `block w-full mt-1 p-2 border rounded ${emptyFields.includes('time') ? 'border-red-500' : 'border-gray-300'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-4\",\n      children: [\"Length [km]:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setLength(e.target.value),\n        value: length,\n        className: `block w-full mt-1 p-2 border rounded ${emptyFields.includes('length') ? 'border-red-500' : 'border-gray-300'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full py-2 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n      children: \"Add New Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanForm, \"G/RiRyR6LlYwKH+WLDjvAGWfodg=\", false, function () {\n  return [useItineraryContext];\n});\n_c = PlanForm;\nexport default PlanForm;\nvar _c;\n$RefreshReg$(_c, \"PlanForm\");","map":{"version":3,"names":["useState","useItineraryContext","jsxDEV","_jsxDEV","PlanForm","_s","place","setPlace","time","setTime","length","setLength","error","setError","emptyFields","setEmptyFields","dispatch","handleSubmit","e","preventDefault","lengthFloat","parseFloat","isNaN","run","token","sessionStorage","getItem","response","fetch","method","body","JSON","stringify","headers","authorization","json","plan","console","log","ok","type","payload","className","onSubmit","children","onChange","target","value","includes","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP_Elitebook/internet-tehnologije-projekat-trazenjepartnerazatrcanje_2021_1064/runningbuddyjedan/src/components/PlanForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useItineraryContext } from '../hooks/ItineraryHooks';\r\n\r\nconst PlanForm = () => {\r\n  // const placeOptions = ['Vracar', 'Palilula', 'Zvezdara', 'Rakovica', 'Novi Beograd', 'Savski venac'];\r\n\r\n  const [place, setPlace] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [length, setLength] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const { dispatch } = useItineraryContext();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const lengthFloat = parseFloat(length);\r\n\r\n    // provera da li je forma dobro popunjena\r\n    if (!place || !time || isNaN(lengthFloat) || lengthFloat <= 0) {\r\n      setError('Please fill in all fields correctly.');\r\n      setEmptyFields(['place', 'time', 'length']);\r\n      return;\r\n    }\r\n\r\n    const run = { time, place, length: lengthFloat };\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    if (token) {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/plan', {\r\n          method: 'POST',\r\n          body: JSON.stringify(run),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: token,\r\n          },\r\n        });\r\n\r\n        const json = await response.json();\r\n        \r\n        const plan = json.plan;\r\n        console.log('ovo je plan kreiran', plan)\r\n\r\n        if (!response.ok) {\r\n          setError(json.error);\r\n          setEmptyFields(json.emptyFields);\r\n        } else {\r\n          setEmptyFields([]);\r\n          setError(null);\r\n          console.log('New plan added:', json);\r\n          setTime('');\r\n          setPlace('');\r\n          setLength('');\r\n          dispatch({ type: 'ADD_PLAN_TO_ITINERARY', payload: plan });\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to create plan:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create-form p-4 bg-white shadow-md rounded-lg\" onSubmit={handleSubmit}>\r\n      \r\n      <label className=\"block mb-2\">\r\n        Place:\r\n        {/* <select\r\n          onChange={(e) => setPlace(e.target.value)}\r\n          value={place}\r\n          className={`block w-full mt-1 p-2 border rounded ${emptyFields.includes('place') ? 'border-red-500' : 'border-gray-300'}`}\r\n        >\r\n          <option value=\"\">Select a place</option>\r\n          {placeOptions.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n        <input\r\n  type=\"text\"\r\n  onChange={(e) => setPlace(e.target.value)}\r\n  value={place}\r\n  className={`block w-full mt-1 p-2 border rounded ${emptyFields.includes('place') ? 'border-red-500' : 'border-gray-300'}`}\r\n  placeholder=\"Enter a place\"\r\n/>\r\n      </label>\r\n\r\n      <label className=\"block mb-2\">\r\n        Date and Time:\r\n        <input\r\n          type=\"datetime-local\"\r\n          onChange={(e) => setTime(e.target.value)}\r\n          value={time}\r\n          className={`block w-full mt-1 p-2 border rounded ${emptyFields.includes('time') ? 'border-red-500' : 'border-gray-300'}`}\r\n        />\r\n      </label>\r\n\r\n      <label className=\"block mb-4\">\r\n        Length [km]:\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setLength(e.target.value)}\r\n          value={length}\r\n          className={`block w-full mt-1 p-2 border rounded ${emptyFields.includes('length') ? 'border-red-500' : 'border-gray-300'}`}\r\n        />\r\n      </label>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full py-2 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n      >\r\n        Add New Plan\r\n      </button>\r\n\r\n      {error && <div className=\"mt-4 text-red-500\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PlanForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}